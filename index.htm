<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Document</title>
</head>

<body>
    <div class="container">
        <div class="input">
            <input type="text" id="ip" required />
            <label for="ip">user name</label>
        </div>
    </div>
    <div class="container">
        <ul class="cube-container">
            <li class="cube" style="--bgc:#4267B2; --zIdx:3;"><span>Facebook</span></li>
            <li class="cube" style="--bgc:#DB4437; --zIdx:2;"><span>Google</span></li>
            <li class="cube" style="--bgc:#1DA1F2; --zIdx:1;"><span>Twitter</span></li>
        </ul>
    </div>
    <div class="container">
        <div class="checkbox">
            <input type="checkbox" name="twitter" id="twitter" />
            <label for="twitter">
                <div class="checkbox-box"></div><span>Twitter</span>
            </label>
        </div>
    </div>
    <div class="container">
        <div class="checkbox1">
            <input type="checkbox" name="twitter" id="twitter1" />
            <label for="twitter1">
                <div class="checkbox-box"></div>
                <span>Twitter</span>
            </label>
        </div>
    </div>
    <div class="container">
        <div class="checkbox2">
            <input type="checkbox" name="twitter" id="twitter2" />
            <label for="twitter2">
                <div class="checkbox-box"></div>
                <span>Twitter</span>
            </label>
        </div>
    </div>
    <div class="container">
        <div class="download">
            <button id="download" type="button"><span id="download-text">Download</span> <span id="percentage"
                    class="hide">0%</span></button>
            <svg id="progress-container" class="progress hide" width="44" height="44" viewBox="0 0 44 44">
                <circle class="progress-background" r="20" cx="22" cy="22" />
                <circle id="progress" class="progress-main" r="20" cx="22" cy="22" />
            </svg>
        </div>
    </div>
    <div class="container">
        <div class="select-container" data-type="inside">
            <input type="checkbox" name="language" id="language">
            <label title="language" class="language-select" for="language">
                <span data-value=""></span>
            </label>
            <div class="select-options" id="select-options">
                <div class="opt" data-default-check="true" data-value="Java"><span>Java</span></div>
                <div class="opt" data-default-check="false" data-value="JavaScript"><span>JavaScript</span></div>
                <div class="opt" data-default-check="false" data-value="C++"><span>C++</span></div>
                <div class="opt" data-default-check="false" data-value="Python"><span>Python</span></div>
            </div>
        </div>
    </div>
</body>

<script>
    const language = document.querySelector("#language");
    const opts = document.querySelector("#select-options");
    const defaultContent = document.querySelector(".language-select");
    const defaultCheck = document.querySelector("[data-default-check='true']");
    const handleClick = (e) => {
        if (!e.target.closest("[data-type='inside']")) {
            language.checked = false;
        }
    }
    document.addEventListener("click", handleClick);

    defaultContent.firstElementChild.textContent = defaultCheck.textContent;
    const handleChangeLanguage = (e) => {
        if (!e.target.checked) { opts.onclick = null; return; }
        opts.onclick = function (e) {
            console.log(e.target.textContent);
            console.log(defaultContent.firstElementChild.textContent);
            defaultContent.firstElementChild.textContent = e.target.textContent;
            defaultContent.firstElementChild.dataset.value = e.target.textContent;
        }
    }
    language.addEventListener("change", handleChangeLanguage)
</script>
<script>
    const progress = document.querySelector("#progress");
    const circumference = progress.r.baseVal.value * 2 * Math.PI;
    const downloadBtn = document.querySelector("#download");
    const progressContainer = document.querySelector("#progress-container");
    const percentage = document.querySelector("#percentage");
    const downloadText = document.querySelector("#download-text");

    progress.style.strokeDasharray = circumference;
    progress.style.strokeDashoffset = circumference;

    const handleDownload = () => {
        progressContainer.classList.remove("hide");
        progressContainer.classList.add("visible");
        percentage.classList.remove("hide");
        percentage.classList.add("visible")
        downloadText.textContent = "Downloading ...";
        let percentageDone = 0;
        const intervalTimer = setInterval(() => {
            if (percentageDone === 100 || parseInt(progress.style.strokeDashoffset) === circumference) {
                console.log("run over ...");
                percentage.textContent = "0%";
                progressContainer.classList.remove("visible");
                progressContainer.classList.add("hide");
                downloadText.textContent = "Downloaded";
                percentage.classList.remove("visible");
                percentage.classList.add("hide")
                percentageDone = 0;
                clearInterval(intervalTimer);
                setTimeout(() => downloadText.textContent = "Download", 1000)
            }
            percentageDone += Math.random() * 10;
            if (percentageDone >= 100) percentageDone = 100;
            percentage.textContent = Math.floor(percentageDone) + "%";
            const progressDone = circumference - (percentageDone / 100 * circumference);
            console.log(progressDone);
            progress.style.strokeDashoffset = progressDone;
        }, 500);
    }
    downloadBtn.addEventListener("click", handleDownload)
</script>

</html>